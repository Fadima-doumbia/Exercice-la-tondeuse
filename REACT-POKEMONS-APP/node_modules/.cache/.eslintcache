[{"C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\index.tsx":"1","C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\App.tsx":"2","C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\models\\pokemon.ts":"3","C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\models\\mock-pokemon.ts":"4","C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\pages\\pokemon-list.tsx":"5","C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\components\\pokemon-card.tsx":"6","C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\helpers\\format-date.ts":"7","C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\helpers\\format-type.ts":"8","C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\pages\\pokemon-detail.tsx":"9","C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\pages\\page-not-found.tsx":"10","C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\pages\\pokemon-edit.tsx":"11","C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\components\\pokemon-form.tsx":"12"},{"size":163,"mtime":1645557814938,"results":"13","hashOfConfig":"14"},{"size":1287,"mtime":1646656755269,"results":"15","hashOfConfig":"14"},{"size":779,"mtime":1645560541772,"results":"16","hashOfConfig":"14"},{"size":2377,"mtime":1645560650244,"results":"17","hashOfConfig":"14"},{"size":726,"mtime":1645797616540,"results":"18","hashOfConfig":"14"},{"size":1623,"mtime":1645798084088,"results":"19","hashOfConfig":"14"},{"size":153,"mtime":1645784551391,"results":"20","hashOfConfig":"14"},{"size":1068,"mtime":1645784777437,"results":"21","hashOfConfig":"14"},{"size":2926,"mtime":1645800971202,"results":"22","hashOfConfig":"14"},{"size":513,"mtime":1645798272129,"results":"23","hashOfConfig":"14"},{"size":1026,"mtime":1645799016320,"results":"24","hashOfConfig":"14"},{"size":4505,"mtime":1645832396069,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"z91sp3",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},"C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\index.tsx",[],["53","54"],"C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\App.tsx",[],"C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\models\\pokemon.ts",[],["55","56"],"C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\models\\mock-pokemon.ts",[],"C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\pages\\pokemon-list.tsx",[],"C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\components\\pokemon-card.tsx",[],"C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\helpers\\format-date.ts",[],"C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\helpers\\format-type.ts",[],"C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\pages\\pokemon-detail.tsx",[],"C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\pages\\page-not-found.tsx",[],"C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\pages\\pokemon-edit.tsx",[],"C:\\Users\\Fadima\\Desktop\\REACT\\REACT-POKEMONS-APP\\src\\components\\pokemon-form.tsx",["57"],"import React, { FunctionComponent, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Pokemon from '../models/pokemon';\r\nimport formatType from '../helpers/format-type';\r\n  \r\ntype Props = {\r\n  pokemon: Pokemon\r\n};\r\n\r\ntype Field = {\r\n  value?: any,\r\n  error?: string,\r\n  isValid?: boolean\r\n}\r\n\r\ntype Form = {\r\n  name: Field,\r\n  hp: Field,\r\n  cp: Field,\r\n  types: Field\r\n}\r\n  \r\nconst PokemonForm: FunctionComponent<Props> = ({pokemon}) => {\r\n  \r\n  const [form, setForm] = useState<Form>({\r\n    name: {value: pokemon.name, isValid: true},\r\n    hp: { value: pokemon.hp, isValid: true},\r\n    cp: { value: pokemon.cp, isValid: true},\r\n    types: { value: pokemon.types, isValid: true}\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  const types: string[] = [\r\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\r\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\r\n  ];\r\n\r\n  const hasType = (type : String) : boolean => {\r\n    return form.types.value.includes(type);\r\n  }\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const fieldName: string = e.target.name;\r\n    const fieldValue: string = e.target.value;\r\n    const newField: Field = {[fieldName] : { value: fieldValue }};\r\n\r\n    setForm({...form, ...newField});\r\n  }\r\n   \r\n  const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const checked = e.target.checked;\r\n    let newField: Field;\r\n\r\n    if(checked) {\r\n      // si l'utilisateur coche un type, à l'ajoute a la liste des types de pokemon.\r\n      const newTypes: string[] = form.types.value.concat([type]);\r\n      newField = { value: newTypes }\r\n    } else {\r\n      //  si l'utilisateur decoche un type, on le retire de la liste des types de pokemon\r\n      const newTypes: string[] = form.types.value.filter((currentType: string) => currentType !== type);\r\n      newField = { value: newTypes };\r\n    }\r\n\r\n    setForm({...form, ...{ types: newField }});\r\n  } \r\n\r\n  const handleSubmit = ( e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    console.log(form);\r\n    history.push(`/pokemons/${pokemon.id}`);\r\n  }\r\n\r\n\r\n  return (\r\n    <form>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\"> \r\n            <div className=\"card-image\">\r\n              <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\r\n            </div>\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Pokemon name */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Nom</label>\r\n                  <input id=\"name\" name = 'name' type=\"text\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)} ></input>\r\n                </div>\r\n                {/* Pokemon hp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"hp\">Point de vie</label>\r\n                  <input id=\"hp\" name = 'hp' type=\"number\" className=\"form-control\"  value={form.hp.value} onChange={e => handleInputChange(e)} ></input>\r\n                </div>\r\n                {/* Pokemon cp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"cp\">Dégâts</label>\r\n                  <input id=\"cp\" name = 'cp' type=\"number\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)} ></input>\r\n                </div>\r\n                {/* Pokemon types */}\r\n                <div className=\"form-group\">\r\n                  <label>Types</label>\r\n                  {types.map(type => (\r\n                    <div key={type} style={{marginBottom: '10px'}}>\r\n                      <label>\r\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value={type} checked={hasType(type)} onChange={e => selectType(type, e)} ></input>\r\n                        <span>\r\n                          <p className={formatType(type)}>{ type }</p>\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n   \r\nexport default PokemonForm;",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"58","replacedBy":"62"},{"ruleId":"60","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":68,"column":9,"nodeType":"66","messageId":"67","endLine":68,"endColumn":21},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],["68"],["69"],"@typescript-eslint/no-unused-vars","'handleSubmit' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]